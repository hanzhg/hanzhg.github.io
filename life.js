const canvas=document.querySelector("canvas"),context=canvas.getContext("2d");canvas.width=window.innerWidth,canvas.height=window.innerHeight;let currentX=window.innerWidth,currentY=window.innerHeight,mouseX=window.innerWidth,mouseY=window.innerHeight;const res=10,columns=Math.floor(canvas.width/res),rows=Math.floor(canvas.height/res);let on=!1;function buildGrid(){const t=new Array(columns).fill(0);for(var e=0;e<columns;e++)t[e]=new Array(rows).fill(0);return t}let grid=buildGrid();requestAnimationFrame(update);const startButton=document.querySelector("#start"),stopButton=document.querySelector("#stop"),restartButton=document.querySelector("#restart");function update(){on&&(grid=nextGen(grid)),render(grid),currentX+=mouseX-currentX,currentY=currentY+(mouseY-currentY)-160,requestAnimationFrame(update)}function nextGen(t){const e=t.map(t=>[...t]);for(let n=0;n<t.length;n++)for(let r=0;r<t[n].length;r++){const o=t[n][r];let c=0;for(let e=-1;e<2;e++)for(let o=-1;o<2;o++){if(0===e&&0===o)continue;const i=n+e,u=r+o;if(i>=0&&u>=0&&i<columns&&u<rows){c+=t[n+e][r+o]}}1===o&&c<2?e[n][r]=0:1===o&&c>3?e[n][r]=0:0===o&&3===c&&(e[n][r]=1)}return e}function render(t){for(let e=0;e<t.length;e++)for(let n=0;n<t[e].length;n++){const r=t[e][n];context.beginPath(),context.rect(e*res,n*res,res,res),context.fillStyle=r?"black":"white",context.fill()}}startButton.addEventListener("click",function(){on=!0}),stopButton.addEventListener("click",function(){on=!1}),restartButton.addEventListener("click",function(){grid=new Array(columns).fill(0).map(()=>new Array(rows).fill(0)),on=!1}),document.addEventListener("click",function(){x=Math.floor(currentX/res),y=Math.floor(currentY/res),grid[x][y]=1},!1),document.addEventListener("mousemove",function(t){mouseX=t.pageX,mouseY=t.pageY,null===currentX&&(currentX=t.pageX,currentY=t.pageY)});